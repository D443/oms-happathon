[deploy]
# list of apps to deploy
apps = perguntus_backend, perguntus_ui,
git_username = developer
virtualenv_root = /var/www/python
module_root = /var/www/python/modules

[module_repos]
oms-core = https://github.com/IDCubed/oms-core
oms-experimental = https://github.com/IDCubed/oms-experimental
oms-happathon = https://github.com/IDCubed/oms-happathon

[perguntus_backend]
template = sandbox
instance = PerguntusBackend
enable_ssl = True
multiply_by = 0
configs = ,
django = True
sentry = False
scripts = ,

fixtures = oms-core/admin_user, oms-core/perguntus_state,

modules = oms-experimental/perguntus_backend, oms-core/arbiter, oms-experimental/state_generator, oms-experimental/rules, oms-experimental/transforms,

pip_requirements = Django, django-tastypie, pytz==2013b, raven, django-constance[database], haversine,
urls = "(r'^api/', include(v1_api.urls))", "url(r'^check/$', CheckQuestionsView.as_view(), name='check_questions')", "url(r'^send/$', SendQuestionView.as_view(), name='send')", "url(r'^admin/', include(admin.site.urls))",

urls_snippet = '''
from tastypie.api import Api
from modules.state_generator.api import PerguntusStateResource
from modules.perguntus_backend.api import QuestionResource, AnswerResource, UserDetailsResource
from modules.perguntus_backend.views import CheckQuestionsView, SendQuestionView

v1_api = Api(api_name='v1')
v1_api.register(QuestionResource())
v1_api.register(AnswerResource())
v1_api.register(UserDetailsResource())
v1_api.register(PerguntusStateResource())
'''

installed_apps = 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.sites', 'django.contrib.messages', 'django.contrib.staticfiles', 'modules.perguntus_backend', 'constance', 'constance.backends.database', 'modules.state_generator',

settings_snippet = '''
TEMPLATE_CONTEXT_PROCESSORS = (
    'django.contrib.auth.context_processors.auth',
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.static',
    'django.core.context_processors.tz',
    'django.contrib.messages.context_processors.messages',
    'constance.context_processors.config',
)
CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'
CONSTANCE_CONFIG = {
    'EMAIL_RECIPIENT': ('perguntus@idcubed.org', 'email recipient'),
    'PERGUNTUS_FRONTEND': ('PerguntusUI', 'Perguntus Frontend Path for use in templates (without slashes)'),
}
'''


[perguntus_ui]
template = sandbox
instance = PerguntusUI
enable_ssl = True
multiply_by = 0
configs = ,
django = True
scripts = ,
sentry = False
fixtures = oms-core/admin_user,

modules = oms-experimental/perguntus_ui, oms-core/api_console, oms-core/static, oms-core/templates,

pip_requirements = Django, django-tastypie, pytz==2013b, raven, django-constance[database],
urls = "url(r'^$', TemplateView.as_view(template_name='dashboard.html'))", "url(r'^edit.*', TemplateView.as_view(template_name='edit.html'))", "url(r'^sharing.*', TemplateView.as_view(template_name='share.html'))", "url(r'^settings.*', TemplateView.as_view(template_name='settings.html'))", "url(r'^console/$', TemplateView.as_view(template_name='console.html'))", "url(r'^questionform.*', TemplateView.as_view(template_name='questionform.html'))", "url(r'^mobile.*', TemplateView.as_view(template_name='mobile.html'))", "url(r'^admin/', include(admin.site.urls))",

urls_snippet = '''
from django.views.generic import TemplateView
'''

installed_apps = 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.sites', 'django.contrib.messages', 'django.contrib.staticfiles', 'constance', 'constance.backends.database', 'modules.perguntus_ui', 'modules.api_console', 

settings_snippet = '''
TEMPLATE_CONTEXT_PROCESSORS = (
    'django.contrib.auth.context_processors.auth',
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.static',
    'django.core.context_processors.tz',
    'django.contrib.messages.context_processors.messages',
    'constance.context_processors.config',
)
CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'
CONSTANCE_CONFIG = {
    'OIDC_HOST': ('baset.idhypercubed.org', 'The OIC Host'),
    'APP_SCOPE': ('perguntus_ui', 'The Scope that this application uses'),
    'APP_CLIENT': ('perguntus_ui', 'The Application Client to be used'),
    'PERGUNTUS_BACKEND': ('/PerguntusBackend/', 'Perguntus Backend Path for use in templates'),
    'PERGUNTUS_FRONTEND': ('/PerguntusUI/', 'Perguntus Frontend Path for use in templates'),
    'API_CONSOLE_BACKEND': ('/PerguntusBackend/api/v1/', 'Base URL to the backend API the API Console ought to pull schema from (relative/absolute)'),
}
'''
